// let fruits: List = ("Apple", "Banana")
// let more_fruits: List = (fruits, "Cocoa", "Melon", "Peach")
// let bla_bla: List = (0, 1, more_fruits)

// [print: fruits]
// [print: fruits{1}]

// [print: more_fruits]
// [print: more_fruits{0}]
// [print: more_fruits{0}{1}]

def replaceInString:(String str) word:(String) with:(String) -> Bool
    def writeMessage:(String msg) -> Void
        def actuallyPrint:(String it) -> Void
            [print: it]
        end

        [actuallyPrint: msg]
    end

    [writeMessage: [str stringAfterReplacing: word with: with]]

    return true
end

let result: Any?
result = [replaceInString: "Hello, world!" word: "world" with: "Coal"]

[print: ["The call returned: " concat: result]]
