// let fruits: List = ("Apple", "Banana")
// let more_fruits: List = (fruits, "Cocoa", "Melon", "Peach")
// let bla_bla: List = (0, 1, more_fruits)

// [print: fruits]
// [print: fruits{1}]

// [print: more_fruits]
// [print: more_fruits{0}]
// [print: more_fruits{0}{1}]


// def replaceInString:(String str) word:(String) with:(String) -> Bool
//     def writeMessage:(String msg) -> Void
//         def actuallyPrint:(String it) -> Void
//             [print: it]
//         end

//         [actuallyPrint: msg]
//     end

//     [writeMessage: [str stringAfterReplacing: word with: with]]

//     return true
// end

// let result: Any?
// result = [replaceInString: "Hello, world!" word: "world" with: "Coal"]

// [print: ["The call returned: " concat: result]]


let test: Any?
test = true
// test = 42
// test = 43

if test == true then
    [print: "It's the truth!"]
elif test == 42 then
    [print: "It's the meaning of life!"]
elif test > 42 then
    [print: "It's more than the meaning of life!"]
else
    [print: "It's a lie!"]
end


// let a_list: List = (0, 1, 2, 3, 4, 5)

// [print: a_list]

// a_list{2} = "Two"
// [print: a_list]

// let other_list: List = (6, 7, 8, 9)
// [a_list update: other_list]
// [print: a_list]

// [print: [a_list{3,-1} iterate]]
